eksctl create cluster

eksctl create cluster --name=eksdemo1 --without-nodegroup

eksctl utils associate-iam-oidc-provider --region eu-central-1 --cluster eksdemo1 --approve

eksctl create nodegroup --cluster=eksdemo1 --name=eksdemo1-ng-public1 --node-type=t2.micro --nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 --ssh-access --ssh-public-key=eks-demo --managed --asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access

# If you wish to provision default node-type, just skip this tag --node-type=t2.micro

eksctl get cluster

eksctl get nodegroup --cluster=eksdemo1

eksctl delete nodegroup --cluster=eksdemo1 --name=eksdemo1-ng-public1

eksctl delete cluster eksdemo1

kubectl create -f nodeport-service.yaml

kubectl get all

kubectl get nodes

kubectl get nodes -o wide

kubectl get pods -o wide

Login to one of the Nodes and execute - curl 192.168.22.225:32000

kubectl create -f loadbalancer-service.yaml

kubectl get svc

kubectl get po -o wide

kubectl get po

kubectl delete -f nodeport-service.yaml

kubectl delete -f loadbalancer-service.yaml

kubectl get rs


=====================================================================================

13  eksctl create cluster --name=eksdemo1 --without-nodegroup
   14  clear
   15  eksctl utils associate-iam-oidc-provider --region ap-south-1 --cluster eksdemo1 --approve
   16  eksctl create nodegroup --cluster=eksdemo1 --name=ng-demo1 --node-type=m5.large --nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 --ssh-access --ssh-public-key=devops-june-2023 --managed --asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access
   17  clear
   18  eksctl get cluster
   19  eksctl get nodegroup --cluster=eksdemo1
   20  kubectl get no
   21  kubectl get nodes
   22  clear
   23  kubectl get nodes -o wide
   24  kubectk get ns
   25  kubectl get ns
   26  kubectl get all -n default
   27  kubectl get all -n kube-node-lease
   28  kubectl get all -n kube-public
   29  clear
   30  kubectl get all -n kube-system
   31  ls -l
   32  cat deployment.yaml 
   33  kubectl get pods -n kube-system
   34  kubectl get pods -n kube-system -o wide
   35  kubectl get pods
   36  clear
   37  ls -l
   38  kubectl apply -f deployment.yaml 
   39  kubectl get all
   40  kubectl get all -o wide
   41  clear
   42  kubectl get po -o wide
   43  kubectl get rs
   44  kubectl get deploy

====================================================================================================================

14  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/cloud/deploy.yaml
   15  kubectl get all -n ingress-nginx
   16  kubectl get ingressClass
   17  ls -l
   18  cat app1.yaml 
   19  kubectl apply -f app1.yaml 
   20  kubectl get all
   21  ls -l
   22  kubectl apply -f ingress.yaml 
   23  kubectl get ingress --all-namespaces
   24  kubectl get pods --all-namespaces
   25  kubectl describe ingress ingress-nginx
   26  kubectl get nginx-svc --all-namespaces
   27  kubectl get svc nginx-svc --all-namespaces
   28  kubectl describe svc nginx-svc --all-namespaces
   29  kubectl describe svc nginx-svc
   30  kubectl delete -f app1.yaml 
   31  kubectl delete -f ingress.yaml 
   32  kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/cloud/deploy.yaml
   33  eksctl get nodegroup --cluster=eksdemo1
   34  eksctl delete nodegroup --cluster=eksdemo1 --name=ng-demo1
   35  history
